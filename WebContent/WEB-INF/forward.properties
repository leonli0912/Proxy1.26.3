############################################################################
# THIS PROXY IS INTENDED AS A DEVELOPMENT TOOL. IT MUST NOT BE USED IN A
# PRODUCTIVE ENVIRONMENT.
#
# The web app must be configured for the path /
#
# Before committing changes to forward.properties, add an appropriate test
# to tests.properties and check that there are no tests failures reported
# when starting the proxy!
#
# If you want to have local (private) changes, create a file
# local_forward.properties in the WEB-INF folder. You can also have private
# tests in local_tests.properties.
############################################################################

# See https://wiki.wdf.sap.corp/wiki/display/UICEI/Proxy+Servlet for more
# information.

# Configuration:

# A Rule named x (with x being an arbitrary string) is specified by the two
# properties x.pattern and x.target. The properties x.options, x.header,
# x.filter, x.port and x.proxy can be used for further configuration. The
# pattern is a regular expression that is matched against the full path of the
# request URL, the target is a URL to which this request is forwarded
# (actually the matched part of the path is replaced by the target). The
# resulting target does not have to be a full URL; it is resolved using the
# server's root as base. The patterns are all matched against the request
# path, the most specific pattern wins.

# Rule A is more specific than rule B if the matched part of B is completely
# contained in the matched part of A. If two rules match, but the matched
# substrings are equal, overlap or are completely different, the proxy returns
# an internal error (code 500) with the response describing the conflict.
# Use the run-time tests to check your rules and avoid such conflicts.

# Examples:
# - Request path "/path/to/foo", A matches "/path/to/foo", B matches "/path",
#   --> A is chosen
# - Request path "/path/to/foo", A matches "/path/to", B matches "/to/foo",
#   --> error
# - Request path "/path/to/foo", A and B match "/path/to/foo"
#   --> error

# All property values may refer to other properties via "${property.name}".
# The property x.target may also refer to pattern groups of x.pattern via "$i"
# (including "$0" for the complete match).

# x.options may contain a comma-separated list of options (case insensitive):
#   nocache      prevents that the browser adds the response to its cache.
#   nocase       ensures that the matching is done case-insensitive
#   inactive     If this option is set, the rule is inactive and will not be
#                matched. This comes especially handy in
#                local_forward.properties to temporarily switch off a rule
#                locally. You may also use "disabled" or "off".
#   preservehost This option overrides the global option "preserveHost" for
#                the given rule. If the global option is true you may override
#                it via "nopreservehost".

# x.header (or x.headers) can be used to set additional headers in the forward
# request. The syntax is that of request properties, e.g. "foo=bar&bar=baz".

# x.filter may point to a class which implements the interface
# com.sap.ui2.proxy.ResponseFilter. Such a filter is called to copy the
# response from the forwarded request to the original request, but may
# manipulate the response. If no filter is defined the response is copied as
# is. If the filter cannot be found, a ConfigurationException is thrown when
# the servlet starts.

# x.port (or x.ports) can restrict the rule to a specific port (or a comma-
# separated list of ports). This allows e.g. restricting certain rules to
# https, or activate various ports in Tomcat with different behaviour (similar
# to the Web Dispatcher). The port can be specified as a number (not
# recommended) or via another global variable to allows others to run Tomcat
# on a different port by simply changing this global variable in
# local_forward.properties.)
# Example:
#   https=8443
#
#   u31.pattern = ^(/sap/public/bc/|/sap/bc/)
#   u31.target = ${u31}$0
#   u31.port = ${https}

# x.proxy can be used to forward this rule through the given proxy. The proxy
# is given in the form "host:port". If you activated a global proxy (either
# via system properties or via the global property "proxy"), you can prevent
# forwarding this rule through the proxy via "x.proxy = none".
# Example:
#   fiddler = localhost:8888
#
#   gateway.pattern = ^/sap/opu/odata/
#   gateway.target = ${gateway}$0
#   gateway.proxy = ${fiddler}

# If this option is set, the "Host" header from the original request is
# forwarded unchanged. Otherwise it is sent correctly according to the HTTP
# 1.1 spec. The default is true, because in previous versions this header was
# _always_ sent unchanged. This can be overridden by every rule via a rule
# option.
#preserveHost = true

# The proxy reports where it forwarded to by setting the response properties
# "X-Forwarded-Via-Rule" and "X-Forwarded-To" (default is off). You can check
# these properties using HttpWatch or your browser's developer tools.
X-Forwarded-To = true

# As a default (and de-facto standard for proxies) the proxy forwards the
# client's IP address to the server.
#X-Forwarded-For = true

# The proxy writes a simple log to System.out (default is off).
# log = true

# If this property is set, the proxy servlet only accepts HTTPS requests.
# HTTP requests are responded with 403 Forbidden. The property can be
# overridden via a system property with the same name.
https.required = true

# When this option is set, all requests are forwarded through the given proxy.
# Format is "host:port".
#proxy = localhost:8888

# With this option you can specify a comma-separated list of projects that are
# also scanned for configuration files. The projects must be available as Web
# Applications in the root folder (e.g. "services" as "/services"). The
# property is checked each time a project configuration has been loaded, so
# that each project can pull up further projects to load.
#
# Project selection starts with the system properties "configuration" and
# "forwarding.projects". "configuration" prevents loading the servlet's own
# forward.properties whereas "forwarding.projects" allows it.
#
# If after reading the system properties and its own forward.properties no
# additional projects have been found, the proxy searches its own "proxy"
# folder in the file system and uses the list of all directories at the same
# level.
#forwarding.projects =

# If this option is set, the patterns always match from the start. The leading
# '^' is unnecessary and will be ignored. This drastically limits the risk of
# rule conflicts; when this option is set the only possible conflicts are
# matches for the very same path prefix. However it is almost impossible to
# write an infix rule not conflicting with any given prefix rule. (And in all
# cases I've seen so far the infix rule was intended to be a prefix rule, but
# the leading '^' was missing.)
# The hardcoded default is false to be compatible with previous versions, but
# we explicitely set it here to avoid problems.
prefixMatching = true

# See also https://wiki.wdf.sap.corp/wiki/display/UICEI/Proxy+Servlet

#----------------------------------------------------------------------------
# CONSTANTS
#----------------------------------------------------------------------------
# Fiddler proxy
fiddler = localhost:8888
# Some known servers (not all are used actually)
er9_https = https://ldcier9.wdf.sap.corp:44300
g3j_http = http://vmw3814.wdf.sap.corp:50020
g3j_https = https://vmw3814.wdf.sap.corp:44320
g3t_http = http://vmw3815.wdf.sap.corp:50009
g3t_https = https://vmw3815.wdf.sap.corp:44309
ht3_http = http://ld7034.wdf.sap.corp:50000
ht3_https = https://ld7034.wdf.sap.corp:44300
lddbvs3_http = http://lddbvs3.wdf.sap.corp:8002
lddbvs3_https = https://lddbvs3.wdf.sap.corp:4302
pb8_https = https://vmw3911.wdf.sap.corp:44335
u00_https = https://ldciu00.wdf.sap.corp:44318
# U31 supports https only
u31_https = https://ldciu31.wdf.sap.corp:44336
vephxinfra_http = http://vephxinfra.dhcp.wdf.sap.corp:8180
veui5infra_http = http://veui5infra.dhcp.wdf.sap.corp:8080
# omit the port, it is added below!
venwbcwin8sr_prefix = https://venwbcwin8sr.dhcp.wdf.sap.corp
vmw2926_https = https://vmw2926.wdf.sap.corp:50001

#----------------------------------------------------------------------------
# VARIABLES
#----------------------------------------------------------------------------
#enterprise_search = ${ht3_https}
# frontend server needs to be addressed via HTTPS!
frontend = ${er9_https}
gateway = ${er9_https}
#hana = ${lddbvs3_https}
testportal = ${vmw2926_https}
# https://wiki.wdf.sap.corp/wiki/display/UICEI/Web+Dispatcher+Port+Overview
# 53290 PB8, local Gateway, Lumira
# 54380 U31 local Gateway
webdispatcher_port = 54380
webdispatcher = ${venwbcwin8sr_prefix}:${webdispatcher_port}

# Remote gateway via web dispatcher: frontend=${webdispatcher}, gateway=${webdispatcher}
#   (Warning: In this scenario U31 may generate URLs using the wrong port)

#----------------------------------------------------------------------------
# web dispatcher "catch all"
#----------------------------------------------------------------------------
default.pattern = /
default.target = ${webdispatcher}$0

#----------------------------------------------------------------------------
# localhost
#----------------------------------------------------------------------------

# Our local projects
projects.pattern = /sap/public/bc/ui2/(page-administration|services|shell-api)/
projects.target =  /$1/
projects.options = nocache

# nwbc-content: a local project with different URL
nwbc-content.pattern = /sap/public/bc/ui2/nwbc/
nwbc-content.target = /nwbc-content/
nwbc-content.options = nocache

# Use local theme files
themes.pattern = /sap/bc/theming/
themes.target = /nwbc-content/theming/
themes.options = nocache

# abap.js
abap.js.pattern = /sap/(public/)?bc/ui5_ui5/(ui2/ushell/)?resources/(~([^~]*)~/)?sap/ushell_abap/bootstrap/abap.js
abap.js.target = /ushell/test-resources/home/sap/ushell_abap/bootstrap/abap-template.js
abap.js.filter = com.sap.ui2.srvc.utils.ScriptWriterFilter
abap.js.options = nocache

# pbs.js
pbs.js.pattern = /sap/public/bc/ui2/services/sap/ui2/srvc/pbs.js
pbs.js.target = /services/sap/ui2/srvc/home/pbs-template.js
pbs.js.filter = com.sap.ui2.srvc.utils.ScriptWriterFilter
pbs.js.options = nocache

# shell.js
shell.js.pattern = /sap/public/bc/ui2/shell-api/sap/ui2/shell/shell.js
shell.js.target = /shell-api/home/sap/ui2/shell/shell-template.js
shell.js.filter = com.sap.ui2.srvc.utils.ScriptWriterFilter
shell.js.options = nocache

# UI2 test libraries
testlibs.pattern = /ui2-test-libs/
testlibs.target = /services/test$0

# The Unified Shell staging which is uploaded to BSP (via BSP Upload)
ushell_staging.pattern = /sap/bc/ui5_ui5/ui2/ushell_staging/
ushell_staging.target =  /ushell-staging/
ushell_staging.options = nocache

# The Unified Shell which is uploaded to BSP (via BSP Upload)
ushell.pattern = /sap/bc/ui5_ui5/ui2/ushell/
ushell.target =  /ushell/
ushell.options = nocache

# The Unified Shell which is uploaded to BSP (via BSP Upload)
bsp_ushell.pattern = /sap/public/bc/ui5_ui5/resources/(~([^~]*)~/)?sap/ushell/
bsp_ushell.target =  /ushell/resources/sap/ushell/
bsp_ushell.options = nocache

# The Unified Shell which is uploaded to BSP (via BSP Upload)
bsp_ushell_abap.pattern = /sap/public/bc/ui5_ui5/resources/(~([^~]*)~/)?sap/ushell_abap/
bsp_ushell_abap.target =  /ushell/resources/sap/ushell_abap/
bsp_ushell_abap.options = nocache

# The Generic Lumira Wrapper which is uploaded to BSP (via BSP Upload)
ushell_gwa.pattern = /sap/bc/ui5_ui5/ui2/ushell_gwa/
ushell_gwa.target =  /ushell_gwa/
ushell_gwa.options = nocache

# The unified shell demonstration sandbox/applications (part of demokit)
sap_ushell_demokit.pattern = /sap/bc/ui5_demokit/test-resources/sap/ushell/
sap_ushell_demokit.target = /ushell/test-resources/sap/ushell/
sap_ushell_demokit.options = nocache

# Deactivate the following three rules and uncomment the dependency to
# com.sap.ui5:fiori-lib in ushell/pom.xml to test with the merged library
sap_fiori_substitute_core.pattern = /sap/(public/)?bc/ui5_ui5/(ui2/ushell/)?resources/(~[^~]*~/)?sap/fiori/core-min-0(-dbg)?.js
sap_fiori_substitute_core.target = /ushell/resources/sap-ui-core$4.js
sap_fiori_substitute_core.options = nocache


sap_fiori_substitute.pattern = /sap/(public/)?bc/ui5_ui5/(ui2/ushell/)?resources/(~[^~]*~/)?sap/fiori/
sap_fiori_substitute.target = /ushell/test/shells/abap/substitute/
sap_fiori_substitute.options = nocache

#sap_fiori_ushell_abap_substitute.pattern = /sap/public/bc/ui5_ui5/resources(/~[^~]*~)?/sap/fiori/
#sap_fiori_ushell_abap_substitute.target = /ushell/test/shells/abap/substitute/
#sap_fiori_ushell_abap_substitute.options = nocache

# activate the following rule to activate a logon screen (from U31)
# Note: Then you won't get the local FioriLaunchpad.html any longer!
#ushell_logon.pattern = /sap/bc/ui5_ui5/ui2/ushell/shells/abap/FioriLaunchpad.html
#ushell_logon.target =  ${frontend}/sap/bc/ui5_ui5/ui2/ushell/shells/abap/FioriLaunchpad.html
#ushell_logon.options = nocache

# avoid that ushell-lib files are preloaded, always use the original sources
ushell-lib.preload.pattern = /sap/(public/)?bc/ui5_ui5/(ui2/ushell/)?resources/(~[^~]*~/)?sap/ushell/library-preload.json
ushell-lib.preload.target = /ushell/test/shells/abap/substitute/library-preload.json

# avoid that ushell_abap files are preloaded, always use the original sources
ushell_abap.preload.pattern = /sap/(public/)?bc/ui5_ui5/(ui2/ushell/)?resources/(~[^~]*~/)?sap/ushell_abap/library-preload.json
ushell_abap.preload.target = /ushell/test/shells/abap/substitute/library-preload.json

# activate to test Generic Wrapper by opening integration test page instead of Lumira Story Viewer
# ushell_gwa_test.pattern = /sap/bi/launchpad/open
# ushell_gwa_test.target = /ushell_gwa/test/index.html
# ushell_gwa.test.options = nocache

#----------------------------------------------------------------------------
# frontend
#----------------------------------------------------------------------------

frontend.pattern = (/sap/public/bc/|/sap/bc/)
frontend.target = ${frontend}$0
frontend.options = nocase

# Direct forward to HTTPS to handle those scenarios where ABAP would redirect otherwise.
# Used to test locally with NWBC HTML ("/nwbc" is the external alias for the entry point).
# /sap\(.+\)/bc/bsp/: BSP applications are generating a session id (or the client?) into URL
frontend_https.pattern = (/nwbc|/ui2/nwbc|/sap(\\(.+\\)|)/bc/(bsp|gui)/|/sap/public/icmandir/its/)
frontend_https.target = ${frontend}$0
frontend_https.options = nocase

# the themes cache URL encodes the client in the form "sap(Yz0xMTE=)"
# not integrated into rule "frontend" to enable taking the themes from a different location
themes-cache.pattern = /sap\\(.+\\)/public/bc/themes/~cache-[^/]*/
themes-cache.target = ${frontend}$0

# jQuery for NWBC desktop
jquery.pattern = /sap/public/bc/ui2/nwbc/desktop/jquery-1.7.1.min.js
jquery.target = ${frontend}/sap/public/bc/ui5_ui5/resources/sap/ui/thirdparty/jquery/jquery-1.7.1.js

# SAPUI5: workaround for open caching issues
ui5.pattern = /sap/public/bc/ui5_ui5/
ui5.target = ${frontend}$0
ui5.options = nocache

#----------------------------------------------------------------------------
# gateway
#----------------------------------------------------------------------------

gateway.pattern = /sap/opu/odata/
gateway.target = ${gateway}$0
gateway.options = nocase
gateway.header = sap-client=500
#----------------------------------------------------------------------------
# HCP
#----------------------------------------------------------------------------
#internet_proxy = proxy:8080
hcpodata=${hcp_https}
hcp_https=https://demoservicep1942455002trial.hanatrial.ondemand.com/DemoService/DemoService.svc
hcpodata.pattern = /hcpserver
hcpodata.target = ${hcp_https}
hcpodata.options = nopreservehost
#sfodata.proxy = ${internet_proxy}
#----------------------------------------------------------------------------
# hana
#----------------------------------------------------------------------------

# HANA resources for SAP Smart Business
hana.pattern = (/[^?]+;o=hana|/sap/hba|/sap/hana)/
hana.target = ${hana}$0
hana.options = nocache

# HANA CHIPs (fetched from frontend server, but not available in U31)
hana.chips.pattern = /sap/bc/ui5_ui5/sap/(zht|ca)_kpi/
hana.chips.target = ${uxd_https}$0
hana.chips.headers = sap-client=810

hana_ui5.pattern = /sap/ui5/1/resources
hana_ui5.target = ${hana}$0

#----------------------------------------------------------------------------
# enterprise search
#----------------------------------------------------------------------------

enterprise_search.pattern = (/sap/es/ina/.+)
enterprise_search.target = ${enterprise_search}$1?sap-client=052
enterprise_search.options = nocase

# used by logout
enterprise_search.prefix.pattern = /ENTERPRISE_SEARCH
enterprise_search.prefix.target = ${enterprise_search}

#----------------------------------------------------------------------------
# miscellaneous
#----------------------------------------------------------------------------

# ResolveLink (forwards to the webdispatcher and rewrites the response so that all webdispatcher
# URLs point to the Tomcat. This is necessary for SAPUI5 views in the start-up service. These can
# only be loaded when they are requested from the same server as the shell.)
#resolveLink.pattern = /sap/opu/odata/UI2/(LAUNCHPAD|INTEROP)/ResolveLink
#resolveLink.target = ${webdispatcher}$0
#resolveLink.filter = com.sap.ui2.proxy.HostRewritingFilter

# SAP CA is requested via ushell which only ABAP can resolve. Note: Despite the default rule going
# to web dispatcher this is needed as otherwise the ushell rule resolves this pattern to localhost.
ca.pattern = /sap/bc/ui5_ui5/ui2/ushell/resources/sap/ca/
ca.target = ${webdispatcher}$0
ca.options = nocache

# Test Portal
portal.pattern = (/AFPServlet/NavigationServlet?|/com\\.sap\\.portal\\.|/com\\.sap\\.ui\\.lightspeed/|/htmlb/|/irj|/logon_ui_resources/|/rtmfCommunicator/|/webdynpro/)
portal.target = ${testportal}$0

###################################################################################################
#
# Application Systems, c.o. Nicolas LUNET
#
###################################################################################################

# Common Gateways
gm6_http = http://ldcigm6.wdf.sap.corp:50033
gm6_https = https://ldcigm6.wdf.sap.corp:44333
uxd_http = http://ldciuxd.wdf.sap.corp:50029
uxd_https = https://ldciuxd.wdf.sap.corp:44329

### CRM Landscape ###

# AHN - Not available yet

qhd_http = http://ldciqhd.wdf.sap.corp:50000
qhd_https = https://ldciqhd.wdf.sap.corp:44300

qdt_http = http://ldciqdt.wdf.sap.corp:50018
qdt_https = https://ldciqdt.wdf.sap.corp:44318

qdo_http = http://ldciqdo.wdf.sap.corp:50055
qdo_https = https://ldciqdo.wdf.sap.corp:44355

### ERP Landscape ###

qi3_http = http://ldai2qi3.wdf.sap.corp:50075
qi3_https = https://ldai2qi3.wdf.sap.corp:44375

qi8_http = http://ldciqi8.wdf.sap.corp:50013
qi8_https = https://ldciqi8.wdf.sap.corp:44313

q7w_http = http://ldciq7w.wdf.sap.corp:50001
q7w_https = https://ldciq7w.wdf.sap.corp:44301

v7q_http = http://uxciv7q.wdf.sap.corp:50025
v7q_https = https://uxciv7q.wdf.sap.corp:44325

qia_http = http://ldai2qia.wdf.sap.corp:50024
qia_https = https://ldai2qia.wdf.sap.corp:44324

### FIN Landscape ###

q91_http = http://ldciq91.wdf.sap.corp:50000
q91_https = https://ldciq91.wdf.sap.corp:44300

qx1_http = http://ld9960.wdf.sap.corp:50000
qx1_https = https://ld9960.wdf.sap.corp:44300

### GRC Landscape ###

gn1_http = http://ldcign1.wdf.sap.corp:50001
gn1_https = https://ldcign1.wdf.sap.corp:44301

qp1_http = http://ldcigp1.wdf.sap.corp:50055
qp1_https = https://dcigp1.wdf.sap.corp:44355

### PPM Landscape ###

x6t_http = http://ldcix6t.wdf.sap.corp:50010
x6t_https = https://ldcix6t.wdf.sap.corp:44310

x6v_http = http://ldcix6v.wdf.sap.corp:50029
x6v_https = https://ldcix6v.wdf.sap.corp:44329

x7e_http = http://ldcix7e.wdf.sap.corp:50055
x7e_https = https://ldcix7e.wdf.sap.corp:44355

x7v_http = http://ldcix7v.wdf.sap.corp:50034
x7v_https = https://ldcix7v.wdf.sap.corp:44334

### SCM Landscape ###

o3y_http = http://ldcio3y.wdf.sap.corp:50045
o3y_https = https://ldcio3y.wdf.sap.corp:44345

q3c_http = http://ldai2q3c.wdf.sap.corp:50024
q3c_https = https://ldai2q3c.wdf.sap.corp:44324

### SNC Landscape ###

b3n_http = http://ldcib3n.wdf.sap.corp:50055
b3n_https = https://ldcib3n.wdf.sap.corp:44355

ebj_http = http://uxciebj.wdf.sap.corp:50015
ebj_https = https://uxciebj.wdf.sap.corp:44315

#### Gateway redirects ####

gateway.redirect.https.pattern = (/sap/opu/odata/.*[?&])sap-server=(...)(&|$)
gateway.redirect.https.target = ${$2_https}$1

gateway.redirect.http.pattern = (/sap/opu/odata/.*[?&])sap-server=(...)-http(&|$)
gateway.redirect.http.target = ${$2_http}$1
